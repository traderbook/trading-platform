version = "1.0.0"

buildscript {
    ext.tornadofx_version = "1.7.17"
    ext.junit_version = "5.1.0"

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.1.0"
    }
}

apply plugin: "application"
apply plugin: "org.junit.platform.gradle.plugin"

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile project(":api")

    // https://mvnrepository.com/artifact/org.jetbrains.exposed/exposed
    compile group: 'org.jetbrains.exposed', name: 'exposed', version: '0.10.5'

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.25.2'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "no.tornado:tornadofx:$tornadofx_version"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_version"
}


mainClassName = "com.traderbook.platform.app.App"

jar {
    baseName="${rootProject.name}"

    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(" "),
                "Main-Class": mainClassName
        )
    }
    from(configurations.compile.collect { entry -> zipTree(entry) }) {
        exclude "META-INF/MANIFEST.MF"
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}
